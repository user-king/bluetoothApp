name: React Native CI/CD

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      bluetooth:
        # image: bluetooth-service-image:latest
        ports:
          - 12345:12345
        options: >-
          --cap-add=NET_ADMIN
          --cap-add=SYS_ADMIN

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Cache Node modules
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Cache Gradle files (for Android builds)
      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run tests
      - name: Run tests
        run: npm test

      # Run linting
      - name: Run ESLint
        run: npm run lint

      # Build Android App
      - name: Build Android App
        run: |
          cd android
          ./gradlew assembleDebug

      # (Optional) Build iOS App if using macOS
      - name: Build iOS App
        if: runner.os == 'macOS'
        run: |
          cd ios
          pod install
          xcodebuild -workspace YourApp.xcworkspace -scheme YourApp -sdk iphonesimulator -configuration Debug build

      # Notify user of success
      - name: Success Notification
        if: success()
        run: echo "Build and tests passed successfully!"

      # Notify user of failure
      - name: Failure Notification
        if: failure()
        run: echo "Build or tests failed!"
